# Select image from https://hub.docker.com/_/php/
image: docker:latest

services:
  - docker:dind

stages:
  - analysis
  - build
  - registry-update
  - clean

analysis-dockerfile:
    stage: analysis
    image: hadolint/hadolint:latest-alpine
    script:
      - hadolint docker/Dockerfile

build:
    stage: build
    before_script:
      - export BUILD_USER=$ODOO_USER BUILD_PASSWORD=$ODOO_PASSWORD
    script:
      - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
      - docker build --build-arg ODOO_VERSION=$CI_COMMIT_TAG --build-arg ODOO_USER=$BUILD_USER --build-arg ODOO_PASSWORD=$BUILD_PASSWORD -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG -f docker/Dockerfile .
    after_script:
      # Save the image as an artifact
      - mkdir -p build/$CI_REGISTRY_IMAGE
      - docker save $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG -o build/$CI_REGISTRY_IMAGE/$CI_COMMIT_TAG.tar
    artifacts:
        name: $CI_JOB_NAME-${CI_COMMIT_SHA:0:8}
        expire_in: 1 day
        paths:
          - build/$CI_REGISTRY_IMAGE
    dependencies:
      - analysis-dockerfile
    only:
      - tags

registry-update:
    stage: registry-update
    before_script:
      # Load image from the build stage
      - docker load -i build/$CI_REGISTRY_IMAGE/$CI_COMMIT_TAG.tar
    script:
      # Push the image
      - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
      - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    dependencies:
      - build
    only:
      - tags

clean:
    stage: clean
    script:
      - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      - docker container prune -f
      - docker volume prune -f
      - docker image prune -f
    allow_failure: true
    only:
      - tags
